---
// Check for search parameter and prepare redirect if it exists
const searchParam = Astro.url.searchParams.get('search');
const redirectUrl = searchParam ? `/catalog?q=${encodeURIComponent(searchParam)}&page=1` : null;

import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header/Header';
import Footer from '../components/Footer/Footer';

import { SITE_TITLE, SITE_DESCRIPTION, BASE_URL } from '../config';
import { HeroIndex, Post } from '../components/HeroIndex/HeroIndex';
import TodaysHours from '../components/TodaysHours/TodaysHours';
import SearchWidget from '../components/SearchWidget/SearchWidget'; // Import the new component

import clsx from 'clsx';
import { LibraryHoursBlock } from '../components/LibraryHoursBlock/LibraryHoursBlock';
import { ReadMoreBlock } from '../components/ReadMoreBlock/ReadMoreBlock';
import dayjs from 'dayjs';

const news: Post[] = (await Astro.glob('./news/**/*.{md,mdx}')).sort(
  (a, b) =>
    new Date(b.frontmatter.publishedAt).valueOf() - new Date(a.frontmatter.publishedAt).valueOf(),
).slice(0, 3).map((post) => ({
  title: post.frontmatter.title,
  url: post.url,
  date: new Date(post.frontmatter.publishedAt).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  }),
  category: post.frontmatter.category,
  description: post.frontmatter.description,
}));
const services: Post[] = (await Astro.glob('./services/**/*.{md,mdx}')).sort(
  (a, b) =>
    new Date(a.frontmatter.publishedAt).valueOf() - new Date(b.frontmatter.publishedAt).valueOf(),
).slice(0, 3).map((post) => ({
  title: post.frontmatter.title,
  url: post.url,
  date: new Date(post.frontmatter.publishedAt).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  }),
  category: post.frontmatter.category,
  description: post.frontmatter.description,
}));

---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <script is:inline>
      // This script will run after the page loads
      document.addEventListener('DOMContentLoaded', function() {
        // Find the search input and button in the HeroIndex component
        var searchInput = document.querySelector('.bg-info-dark input');
        var searchButton = document.querySelector('.bg-info-dark button');
        
        if (searchInput && searchButton) {
          // Add click event listener to the search button
          searchButton.addEventListener('click', function() {
            var searchTerm = searchInput.value.trim();
            if (searchTerm) {
              window.location.href = BASE_URL+'/catalog?q=' + encodeURIComponent(searchTerm) + '&page=1';
            }
          });
          
          // Add keypress event listener to the search input (for Enter key)
          searchInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
              e.preventDefault(); // Prevent form submission
              var searchTerm = searchInput.value.trim();
              if (searchTerm) {
                window.location.href = BASE_URL+'/catalog?q=' + encodeURIComponent(searchTerm) + '&page=1';
              }
            }
          });
        }
      });
    </script>
  </head>
  <body class="dark:bg-slate-900">
    <Header links={[
      { href: BASE_URL, label: 'Home', isActive: true },
      { href: BASE_URL+'events', label: 'Events' },
      { href: BASE_URL+'catalog', label: 'Catalog' },
      { href: BASE_URL+'policies', label: 'Policies' },
      { href: BASE_URL+'services', label: 'Services' },
      { href: BASE_URL+'links', label: 'Links' },
      { href: BASE_URL+'friends', label: 'Friends' },
    ]} 
    socialLinks={[
      { href: 'https://www.facebook.com/StrongMaine/', brand: 'facebook'}
    ]}
    />

    <HeroIndex
      posts={services}>
      <TodaysHours client:only />
      {/* Add SearchWidget here, results will not be shown inline */}
      <div class="mt-4 px-4 md:px-0"> {/* Add some margin and padding */}
        <SearchWidget client:load />
      </div>
    </HeroIndex>
    <main
      class={clsx(
        "grid",
        "mt-8",
        "md:grid-cols-3",
        "grid-cols-1",
        "gap-y-[32px]",
        "gap-x-[32px]",
        "lg:w-4xl",
        "lg:mx-auto",
        "lg:px-0",
        "px-[16px]",
        "w-full"
      )}
    >
      <div class={clsx(
        "md:col-span-2",
        "col-span-1",
        "flex",
        "flex-col",
        "relative",
        "h-auto",
      )}>
        <h1>üßë‚ÄçüöÄ Hello, Astronaut!</h1>
        <p>
          Welcome to the <s>official</s>
          <a href="https://astro.build/">Astro</a>
          <ins>typescript+react+tailwind</ins> blog starter template. This template serves as a<ins
            >n</ins
          >
          <del>lightweight, minimally-styled</del><ins>opinionated</ins> starting point for anyone looking
          to build a personal website, blog, or portfolio <ins>fast</ins> with Astro.
        </p>
        <p>
          This template comes with a few integrations already configured in your
          <code>astro.config.mjs</code> file. You can customize your setup with
          <a href="https://astro.build/integrations">Astro Integrations</a> to add tools like <del
            >Tailwind, React, or</del
          > Vue to your project.
        </p>
        <p>Here are a few ideas on how to get started with the template:</p>
        <ul>
          <li>Edit this page in <code>src/pages/index.astro</code></li>
          <li>
            Edit the site header items in <code
              >src/components/Header.<del>astro</del><ins>tsx</ins>
            </code>
          </li>
          <li>
            Add your name to the footer in <code
              >src/components/Footer.<del>astro</del><ins>tsx</ins>
            </code>
          </li>
          <li>Check out the included blog posts in <code>src/pages/blog/</code></li>
          <li>Customize the blog post page layout in <code>src/layouts/BlogPost.astro</code></li>
        </ul>
        <p>
          Have fun! If you get stuck, remember to <a href="https://docs.astro.build/"
            >read the docs
          </a> or <a href="https://astro.build/chat">join us on Discord</a> to ask questions.
        </p>
        <p>
          Looking for a blog template with a bit more personality? Check out <a
            href="https://github.com/Charca/astro-blog-template"
            >astro-blog-template
          </a> by <a href="https://twitter.com/Charca">Maxi Ferreira</a>.
        </p>
      </div>
      <div
      class={clsx(
        "col-span-1",
        "flex",
        "flex-col",
        "items-start",
        "justify-start",
        "gap-2"
      )}
    >
        <div class={clsx(
          "w-full",
          "md:order-first",
          "order-last"
        )}>
          <h2 class="text-2xl font-bold mb-4">Latest News</h2>
          {news.length > 0 ? (
            news.map((post) => (
              <ReadMoreBlock
                title={post.title}
                titleSize="xs"
                subtitle={post.description}
                category={post.category}
                url={post.url}
                linkText={
                  `Posted on: ${dayjs(post.date).format('MMMM D, YYYY')}`
                }
              />
            ))
          ) : (
            <p>No news available.</p>
          )}
        </div>

        <LibraryHoursBlock />
      </div>

    </main>
    <Footer
    links={[
      { href: BASE_URL+'events', label: 'Events' },
      { href: BASE_URL+'catalog', label: 'Catalog' },
      { href: BASE_URL+'policies', label: 'Policies' },
      { href: BASE_URL+'services', label: 'Services' },
      { href: BASE_URL+'links', label: 'Links' },
      { href: BASE_URL+'friends', label: 'Friends' },
    ]} 
    socialLinks={[
      { href: 'https://www.facebook.com/StrongMaine/', brand: 'facebook'}
    ]} />
  </body>
</html>
